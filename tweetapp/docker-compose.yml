version : '3'

services:


  springboot-docker:
    container_name: spring-app
    image: demo

    build: ./
    ports:
      - 8080:8080
    depends_on:
      - psqldb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://psqldb:5432/TwitterDb
      - SPRING_DATASOURCE_USERNAME=akash
      - SPRING_DATASOURCE_PASSWORD=akash
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update



  psqldb:
    image: postgres

    ports:
      - 5432:5432

    environment:
      - POSTGRES_PASSWORD=akash
      - POSTGRES_USER=akash
      - POSTGRES_DB=TwitterDb

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
  kafdrop:
      image: obsidiandynamics/kafdrop
      container_name: kafdrop
      restart: "no"
      ports:
        - "9000:9000"
      environment:
        KAFKA_BROKERCONNECT: "kafka:29092"
        JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
      depends_on:
        - "kafka"

  redis:
      container_name: redis
      image: redis:latest

      hostname: redis
      ports:
        - "6379:6379"

  redis-commander:
    container_name: redis-commander

    image: rediscommander/redis-commander:latest
    restart: "no"


    depends_on:
    - "redis"
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379


